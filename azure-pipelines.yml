
trigger:
  - none
  
name: Azure Pipelines

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'bf16207c-0192-48bf-96d5-04c4a6350a49'
  subscription_id: '032f2e80-b6ef-44c4-93d4-6feb62c932cf'
  # Environment name
  environmentName: 'final-udacity-project-dennis'
stages:
- stage: deploy_terraform
  displayName: Deploy Terraform
  jobs: 
  - deployment: deploy_terraform
    continueOnError: false
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: TerraformInstaller@0
              displayName: 'install terraform'
              inputs:
                terraformVersion: 'latest'
            - task: Bash@3
              displayName: init
              inputs:
                targetType: 'inline'
                script: |
                  terraform init \
                  -backend-config="storage_account_name=dennistfstorageaccount" \
                  -backend-config="container_name=dennistfcontainer" \
                  -backend-config="key=project.tfstate" \
                  -backend-config="access_key=$TF_STATE_BLOB_ACCESS_KEY"
                workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              env:
                TF_STATE_BLOB_ACCESS_KEY: $(access-key)
                ARM_CLIENT_SECRET: $(service-principal-key)
                ARM_CLIENT_ID: $(service-principal-name)
                ARM_SUBSCRIPTION_ID: '032f2e80-b6ef-44c4-93d4-6feb62c932cf'
                ARM_TENANT_ID: $(tenant)
            - task: Bash@3
              continueOnError: true
              displayName: plan
              inputs:
                targetType: 'inline'
                script: |
                  terraform plan
                workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              env:
                ARM_CLIENT_SECRET: $(finalClientSecret)
                ARM_CLIENT_ID: $(finalClientID)
                ARM_SUBSCRIPTION_ID: '032f2e80-b6ef-44c4-93d4-6feb62c932cf'
                ARM_TENANT_ID: $(tenant)
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    steps:
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/selenium'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/selenium-tests.zip
        replaceExistingArchive: true
    - upload: $(Build.ArtifactStagingDirectory)/selenium-tests.zip
      artifact: selenium
- stage: WebAppDeployment
  displayName: Web App Deployment
  jobs:
  - deployment: FakeRestAPI
    environment: 'WAP-TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: 'azure connection'
              appType: 'webApp'
              appName: 'WAS-EQR'
              package: '$(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip'
              deploymentMethod: 'auto'