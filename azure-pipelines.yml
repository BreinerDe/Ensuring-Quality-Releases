
trigger:
  - main
  
name: Azure Pipelines
variables:
  python.version: '3.7.6'
  terraform.version: '0.13.4'
stages:
- stage: Provisioning
  displayName: Provisioning
  jobs: 
  - job: ProvisioningAppService
    displayName: Provisioning AppService
    steps:
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'default'
        sshKeySecureFile: 'id_rsa'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          ls /home/vsts/work/_temp/
    - task: Terra@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '0.13.4'
    - task: TerraformTaskV1@0
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'EnsuringQualityReleasesSC'
        backendAzureRmResourceGroupName: 'RG-SUPPORT'
        backendAzureRmStorageAccountName: 'sageneralsupport'
        backendAzureRmContainerName: 'terraform-state'
        backendAzureRmKey: 'ensuring-quality-releases.tfstate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    - task: TerraformTaskV1@0
      displayName: Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'EnsuringQualityReleasesSC'
    - task: TerraformTaskV1@0
      displayName: Terraform Validate and Apply  
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'EnsuringQualityReleasesSC'